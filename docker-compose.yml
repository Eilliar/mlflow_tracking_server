version: '3.7'

services:
    minio:
        restart: unless-stopped
        image: minio/minio:RELEASE.2023-06-19T19-52-50Z
        container_name: mlflow_s3
        ports:
            - "9000:9000"
            - "9001:9001"
        command: server /data --console-address ':9001' --address ':9000'
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - minio_data:/data

    mc:
        image: minio/mc@sha256:6ffd76764e8ca484de12c6ecaa352db3d8efd5c9d44f393718b29b6600e0a559
        depends_on:
            - minio
        container_name: mc
        env_file:
            - .env
        entrypoint: >
            /bin/sh -c "
            /tmp/wait-for-it.sh minio:9000 &&
            /usr/bin/mc alias set minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
            /usr/bin/mc mb minio/mlflow;
            /usr/bin/mc policy set public minio/mlflow;
            exit 0;
            "
        volumes:
            - ./wait-for-it.sh:/tmp/wait-for-it.sh

    db:
        restart: unless-stopped
        image: postgres:15.2-alpine3.17
        container_name: mlflow_db
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=${PSQL_USER}
            - POSTGRES_DB=${PSQL_DATABASE}
            - POSTGRES_PASSWORD=${PSQL_PASSWORD}
        volumes:
            - pgdata:/var/lib/postgresql/data

    web:
        restart: unless-stopped
        image: mlflow
        container_name: mlflow_server
        depends_on:
            - mc
            - db
        ports:
            - "5000:5000"
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        # command: mlflow server --backend-store-uri postgresql://${PSQL_USER}:${PSQL_PASSWORD}@db:5432/${PSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0 --no-serve-artifacts
        command: mlflow server --backend-store-uri postgresql://${PSQL_USER}:${PSQL_PASSWORD}@db:5432/${PSQL_DATABASE} --artifacts-destination s3://mlflow --host 0.0.0.0 --serve-artifacts

volumes:
    pgdata:
    minio_data: